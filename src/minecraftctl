#!/bin/bash
# minecraft-server-suite â€” Easily manage one or more Minecraft
# servers on a machine
# Copyright (C) 2024 Jack Harrington
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 
# Get a copy of the source at
# https://github.com/jackharro/minecraft-server-suite

# input: /usr/local/bin/minecraftctl <version> <command>

BIN_NAME=$(basename "$0")

if [ "$*" = snapshot ]; then
    for ver in $("")
    exit 0
fi

# Expect working directory to be /home/minecraft

MC_VER="$1"
TMUX_SESSION="$(echo $MC_VER | tr . _)"
shift
MC_COMMAND="$*"

print_usage() {
    case "$MCCTL_USAGE_HINT" in
        wrong_order) hint="\n\nHint: The <version> and <command> paramaters may have been swapped.\nWarn: the name of the version cannot have the same name as a command." ;;
    esac
    usage="Usage: $BIN_NAME <version> <command>
                  $BIN_NAME snapshot


version:            The name of the Minecraft server that was set via systemctl.
                    For example, minecraft@b1.7.3.service has the name 'b1.7.3'.

command:            One of start, stop, reload or attach or a Minecraft command.

    start:          Start the server. Used by systemd.

    stop:           Stop the server and close the tmux session. Note that
                    depending on the minecraft@.service configuration, systemd
                    may restart the server once the process exits.

    restart:        Stop then start the server to reload configuration.

    attach:         Attach to the version's tmux session.

    *:              Anything else will be sent to the Minecraft server"

    echo -e "${usage}${hint}"
    exit 2
}

mc_command() {
	cmd="$1"
	tmux -S tmux send-keys -t "$TMUX_SESSION" "$cmd" ENTER
	return $?
}

case "$MC_VER" in
    start | stop | reload | attach | snapshot )
        MCCTL_USAGE_HINT=wrong_order print_usage
    ;;
esac

if [ -z "$MC_VER" ]; then
    print_usage
fi

case "$COMMAND" in
    start) 
            tmux -S tmux new-session -c "$MC_HOME"
        
        ;;
    stop) tru e;;
    restart) true ;;
    attach) true ;;
    *) true ;;
esac
